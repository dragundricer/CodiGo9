PS D:\Documentos\GitHub\CodiGo9\BackEnd\Semana22\DjangoRestFramework> py .\manage.py shell                              Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from minimarket.models import UnidadMedida
>>> UnidadMedida.objects.all()
<QuerySet []>
>>> UnidadMedida.objects.bulk_create([
... UnidadMedida(um_desc="Kilos"),
... UnidadMedida(um_desc="Litros"),
... UnidadMedida(um_desc="Mililitros"),
... UnidadMedida(um_desc="Onzas"),
... UnidadMedida(um_desc="Paqute"),
... UnidadMedida(um_desc="Miligramos")
... ])
[<UnidadMedida: UnidadMedida object (None)>, <UnidadMedida: UnidadMedida object (None)>, <UnidadMedida: UnidadMedida object (None)>, <UnidadMedida: UnidadMedida object (None)>, <UnidadMedida: UnidadMedida object (None)>, <UnidadMedida: UnidadMedida object (None)>]
>>> UnidadMedida.objects.all()
<QuerySet [<UnidadMedida: UnidadMedida object (1)>, <UnidadMedida: UnidadMedida object (2)>, <UnidadMedida: UnidadMedida object (6)>, <UnidadMedida: UnidadMedida object (3)>, <UnidadMedida: UnidadMedida object (4)>, <UnidadMedida: UnidadMedida object (5)>]>
>>> exit()
PS D:\Documentos\GitHub\CodiGo9\BackEnd\Semana22\DjangoRestFramework> py .\manage.py shell                              Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from minimarket.models import UnidadMedida
>>> UnidadMedida.objects.all()[0]
<UnidadMedida: UnidadMedida object (1)>
>>> UnidadMedida.objects.all()[0].um_desc
'Kilos'
>>> UnidadMedida.objects.all()[1].um_desc
'Litros'
>>> UnidadMedida.objects
<django.db.models.manager.Manager object at 0x00000272393372B0>
>>> UnidadMedida.objects.one()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Manager' object has no attribute 'one'
>>> UnidadMedida.objects.first()
<UnidadMedida: UnidadMedida object (1)>
>>> UnidadMedida.objects.last()
<UnidadMedida: UnidadMedida object (6)>
>>> UnidadMedida.objects.all()[0:3]
<QuerySet [<UnidadMedida: UnidadMedida object (1)>, <UnidadMedida: UnidadMedida object (2)>, <UnidadMedida: UnidadMedida object (6)>]>
>>> UnidadMedida.objects.all()[:3]
<QuerySet [<UnidadMedida: UnidadMedida object (1)>, <UnidadMedida: UnidadMedida object (2)>, <UnidadMedida: UnidadMedida object (6)>]>
>>> UnidadMedida.objects.all()[-1]
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ACER\AppData\Local\Programs\Python\Python38\lib\site-packages\django\db\models\query.py", line 290, in __getitem__
    assert ((not isinstance(k, slice) and (k >= 0)) or
AssertionError: Negative indexing is not supported.
>>> UnidadMedida.objects.last()
<UnidadMedida: UnidadMedida object (6)>
>>> UnidadMedida.objects.all()
<QuerySet [<UnidadMedida: UnidadMedida object (1)>, <UnidadMedida: UnidadMedida object (2)>, <UnidadMedida: UnidadMedida object (6)>, <UnidadMedida: UnidadMedida object (3)>, <UnidadMedida: UnidadMedida object (4)>, <UnidadMedida: UnidadMedida object (5)>]>
>>> UnidadMedida.objects.all()[0].um_desc
'Kilos'
>>> UnidadMedida.objects.all()[1].um_desc
'Litros'
>>> UnidadMedida.objects.all()[2].um_desc
'Miligramos'
>>> UnidadMedida.objects.all()[3].um_desc
'Mililitros'
>>> UnidadMedida.objects.all()[4].um_desc
'Onzas'
>>> UnidadMedida.objects.all()[5].um_desc
'Paqute'
>>> UnidadMedida.objects.all()[6].um_desc
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\ACER\AppData\Local\Programs\Python\Python38\lib\site-packages\django\db\models\query.py", line 314, in __getitem__
    return qs._result_cache[0]
IndexError: list index out of range
>>> UnidadMedida(um_desc="Amperios")
<UnidadMedida: UnidadMedida object (None)>
>>> u=UnidadMedida(um_desc="Amperios")
>>> u.save()
>>> UnidadMedida(um_desc="Balde").save()
>>> UnidadMedida.objects.all()[1].um_desc
'Balde'